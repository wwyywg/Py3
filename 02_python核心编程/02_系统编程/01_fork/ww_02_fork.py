import os

"""
程序执行到os.fork()时，操作系统会创建一个新的进程（子进程），复制父进程的所有信息到子进程中
父进程和子进程都会从fork()函数中得到一个返回值，在子进程中这个值一定是0，而父进程中是子进程的id号

普通函数调用，调用一次，返回一次，fork()调用一次，返回两次，因为操作系统系统自动把当前进程（父进程）复制了一份（子进程）
子进程返回0，而父进程返回子进程的ID
"""

if __name__ == '__main__':
    x = 0
    rpid = os.fork()
    if rpid < 0:
        print("fork调用失败。")
    elif rpid == 0:
        print("我是子进程（%s），我的父进程是（%s）"%(os.getpid(), os.getppid()))
        x+=1
    else:
        print("我是父进程（%s），我的子进程是（%s）"%(os.getpid(), rpid))

    print("父进程都可以执行这里的代码")













